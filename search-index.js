var searchIndex = {};
searchIndex["rusqbin"] = {"doc":"Rusqbin is a web server that stashes your requests for later retrieval. It is available as both a binary and a library.","items":[[0,"models","rusqbin","Various models and associated helpers and type aliases.",null,null],[3,"Id","rusqbin::models","Id type for Request Bins. Wraps a String.",null,null],[3,"IdExtractor","","Parses normal Strings into an Id according to the compiled Regex that it holds.",null,null],[3,"Request","","A record of an HTTP request made to the server.",null,null],[12,"content_length","","",0,null],[12,"content_type","","",0,null],[12,"time","","",0,null],[12,"method","","",0,null],[12,"path","","",0,null],[12,"body","","",0,null],[12,"headers","","",0,null],[12,"query_string","","",0,null],[3,"BinSummary","","Summary of a Bin of requests.",null,null],[12,"id","","",1,null],[12,"request_count","","",1,null],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"random","","Generates a random Id",2,{"inputs":[],"output":{"name":"id"}}],[11,"value","","Gets the value out of an Id.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Returns a new Id extractor ``` use rusqbin::models::*;",3,{"inputs":[],"output":{"name":"idextractor"}}],[11,"parse","","Parses a string into an Id if it is of the right format.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"request"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"binsummary"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"binsummary"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"storage","rusqbin","Defines a Bins trait for storing Requests as well as a default in-memory implementation of that trait for easy testing.",null,null],[3,"InMemoryBins","rusqbin::storage","A simple in-memory implementation of Bins.",null,null],[12,"bins","","",4,null],[4,"InsertRequestStatus","","ADT for denoting status when inserting a request with a bin id.",null,null],[13,"Ok","","Insert successful",5,null],[13,"NoSuchBin","","Insert failed because no bin by that Id exists",5,null],[4,"DeleteBinStatus","","ADT For deleting a bin by id",null,null],[13,"Ok","","Successfully deleted",6,null],[13,"NoSuchBin","","No such bin. Deletion was not carried out.",6,null],[6,"Bin","","A Bin holds a bunch of requests. For now it's just an alias for a Vector.",null,null],[8,"Bins","","Trait for storage operations for Requests.",null,null],[10,"create_bin","","Returns a BinSummary of a newly-reated bin. The Id in the summary must be unique at the time of creation.",7,{"inputs":[{"name":"self"}],"output":{"name":"binsummary"}}],[10,"delete_bin","","Delete a bin by Id",7,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"deletebinstatus"}}],[10,"get_bin","","Get a bin (not just a summary) by Id",7,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"option"}}],[10,"get_bin_summary","","Get a bin summary by Id",7,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"option"}}],[10,"get_bin_summaries","","Get bin summaries for all currently-stored bins",7,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[10,"insert_request","","Insert a request into a Bin using a bin Id.",7,{"inputs":[{"name":"self"},{"name":"id"},{"name":"request"}],"output":{"name":"insertrequeststatus"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[],"output":{"name":"inmemorybins"}}],[11,"create_bin","","",4,{"inputs":[{"name":"self"}],"output":{"name":"binsummary"}}],[11,"delete_bin","","",4,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"deletebinstatus"}}],[11,"get_bin_summary","","",4,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"option"}}],[11,"get_bin_summaries","","",4,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"get_bin","","",4,{"inputs":[{"name":"self"},{"name":"id"}],"output":{"name":"option"}}],[11,"insert_request","","",4,{"inputs":[{"name":"self"},{"name":"id"},{"name":"request"}],"output":{"name":"insertrequeststatus"}}],[0,"server","rusqbin","Defines a BinsServer, which can serve requests against bins.",null,null],[3,"BinsServer","rusqbin::server","Holds details about the current running server",null,null],[12,"address","","",8,null],[12,"port","","",8,null],[12,"storage","","",8,null],[3,"ContentType","","",null,null],[12,"0","","",9,null],[3,"XRusqBinId","","",null,null],[12,"0","","",10,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"contenttype"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"deref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",9,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",9,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"xrusqbinid"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"xrusqbinid"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"xrusqbinid"}],"output":{"name":"bool"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"deref_mut","","",10,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"header_name","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",10,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",8,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"binsserver"}}],[11,"run","","Starts a BinsServer.",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"run_until","","Starts a BinServer and stops when the given shutdown signal returns.",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[0,"errors","rusqbin","Project-specific errors and From implementations to wrap errors from foreign modules.",null,null],[4,"Error","rusqbin::errors","Project-specfic error enum.",null,null],[13,"PoisonedLock","","",11,null],[13,"JsonEncodingError","","",11,null],[13,"IOError","","",11,null],[13,"RegexError","","",11,null],[13,"UrlParseError","","",11,null],[13,"UnforeseenError","","",11,null],[13,"ServerError","","",11,null],[13,"AddressParsingErr","","",11,null],[13,"FromUtf8Error","","",11,null],[13,"HyperError","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"poisonerror"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"self"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Request"],[3,"BinSummary"],[3,"Id"],[3,"IdExtractor"],[3,"InMemoryBins"],[4,"InsertRequestStatus"],[4,"DeleteBinStatus"],[8,"Bins"],[3,"BinsServer"],[3,"ContentType"],[3,"XRusqBinId"],[4,"Error"]]};
initSearch(searchIndex);
